// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TraJedi.Journal.Data;

#nullable disable

namespace TraJedi.Journal.Data.Migrations
{
    [DbContext(typeof(TraJediDataContext))]
    partial class TraJediDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TraJedi.Journal.Data.ContentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("InputComponentModelId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("InputComponentModelId");

                    b.ToTable("ContentModels");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.InputComponentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AttachedToggle")
                        .HasColumnType("boolean");

                    b.Property<int>("ComponentType")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ContentWrapperId")
                        .HasColumnType("uuid");

                    b.Property<int>("CostRelevant")
                        .HasColumnType("integer");

                    b.Property<int>("PriceValueRelevant")
                        .HasColumnType("integer");

                    b.Property<bool>("RelevantForTradeSummary")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("TradeInputModelId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ContentWrapperId");

                    b.HasIndex("TradeInputModelId");

                    b.ToTable("TradeInputComponents");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.OverallTradeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OverallTradeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("OverallTrades");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.TradeInputModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("OverallTradeModelId")
                        .HasColumnType("uuid");

                    b.Property<int>("TradeInputType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OverallTradeModelId");

                    b.ToTable("TradeInputs");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.ContentModel", b =>
                {
                    b.HasOne("TraJedi.Journal.Data.InputComponentModel", null)
                        .WithMany("History")
                        .HasForeignKey("InputComponentModelId");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.InputComponentModel", b =>
                {
                    b.HasOne("TraJedi.Journal.Data.ContentModel", "ContentWrapper")
                        .WithMany()
                        .HasForeignKey("ContentWrapperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TraJedi.Journal.Data.TradeInputModel", null)
                        .WithMany("TradeComponents")
                        .HasForeignKey("TradeInputModelId");

                    b.Navigation("ContentWrapper");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.TradeInputModel", b =>
                {
                    b.HasOne("TraJedi.Journal.Data.OverallTradeModel", null)
                        .WithMany("TradeInputs")
                        .HasForeignKey("OverallTradeModelId");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.InputComponentModel", b =>
                {
                    b.Navigation("History");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.OverallTradeModel", b =>
                {
                    b.Navigation("TradeInputs");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.TradeInputModel", b =>
                {
                    b.Navigation("TradeComponents");
                });
#pragma warning restore 612, 618
        }
    }
}
