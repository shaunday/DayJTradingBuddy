// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TraJedi.Journal.Data;

#nullable disable

namespace TraJedi.Journal.Data.Migrations
{
    [DbContext(typeof(TradingJournalDataContext))]
    [Migration("20221111115206_traJediDbInitialMigration")]
    partial class traJediDbInitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TraJedi.Journal.Data.ContentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InputComponentModelId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("InputComponentModelId1")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("InputComponentModelId");

                    b.HasIndex("InputComponentModelId1")
                        .IsUnique();

                    b.ToTable("ContentModels");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.InputComponentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AttachedToggle")
                        .HasColumnType("boolean");

                    b.Property<int>("ComponentType")
                        .HasMaxLength(50)
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CostRelevance")
                        .HasColumnType("integer");

                    b.Property<bool>("IsRelevantForOneLineSummation")
                        .HasColumnType("boolean");

                    b.Property<int>("PriceValueRelevance")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("TradeInputModelId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TradeInputModelId");

                    b.ToTable("TradeInputComponents");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.TradeInputModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TradeInputType")
                        .HasMaxLength(50)
                        .HasColumnType("integer");

                    b.Property<Guid>("TradeModelId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TradeModelId");

                    b.ToTable("TradeInputs");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.TradeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("OverallTrades");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.ContentModel", b =>
                {
                    b.HasOne("TraJedi.Journal.Data.InputComponentModel", "InputComponentModel")
                        .WithMany("History")
                        .HasForeignKey("InputComponentModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TraJedi.Journal.Data.InputComponentModel", null)
                        .WithOne("ContentWrapper")
                        .HasForeignKey("TraJedi.Journal.Data.ContentModel", "InputComponentModelId1");

                    b.Navigation("InputComponentModel");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.InputComponentModel", b =>
                {
                    b.HasOne("TraJedi.Journal.Data.TradeInputModel", "TradeInputModel")
                        .WithMany("TradeComponents")
                        .HasForeignKey("TradeInputModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TradeInputModel");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.TradeInputModel", b =>
                {
                    b.HasOne("TraJedi.Journal.Data.TradeModel", "TradeModel")
                        .WithMany("TradeInputs")
                        .HasForeignKey("TradeModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TradeModel");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.InputComponentModel", b =>
                {
                    b.Navigation("ContentWrapper")
                        .IsRequired();

                    b.Navigation("History");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.TradeInputModel", b =>
                {
                    b.Navigation("TradeComponents");
                });

            modelBuilder.Entity("TraJedi.Journal.Data.TradeModel", b =>
                {
                    b.Navigation("TradeInputs");
                });
#pragma warning restore 612, 618
        }
    }
}
